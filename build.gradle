apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.7
version = '1.0'
mainClassName = "org.springframework.xd.ec2.Main"


repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/plugins-snapshot" }
}

task setupProject {
    def config = file("$buildDir/config")
    outputs.dir config
}

task copyConfigs(type:Copy, dependsOn: ':setupProject') {
from 'src/main/resources/xd-ec2.properties'
into "$buildDir/config"
}

applicationDistribution.from(copyConfigs) {
    into "config"
}
ext {
	springVersion = '4.0.0.BUILD-SNAPSHOT'
	mockitoVersion = '1.8.4'
	log4jBridgeVersion = '1.7.5'
	commonsVersion = '3.2'
	jcloudsVersion = '1.6.0'
	logbackVersion = '1.0.13'
	}
dependencies {
    compile "org.slf4j:log4j-over-slf4j:$log4jBridgeVersion"
    compile "commons-collections:commons-collections:$commonsVersion"
    compile "org.jclouds.provider:aws-ec2:$jcloudsVersion"
    compile "org.jclouds.driver:jclouds-sshj:$jcloudsVersion"
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
	compile "org.springframework:spring-web:$springVersion"
	compile "org.springframework:spring-test:$springVersion"
	compile "ch.qos.logback:logback-classic:$logbackVersion"
	
	
	testCompile "org.springframework:spring-test:$springVersion"
	testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile group: 'junit', name: 'junit', version: '4.+'
}



startScripts {
    classpath = files('src/dist/config')+classpath
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
        unixScriptFile.text    = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
}


test {
    systemProperties 'property': 'value'
}
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
