apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.7
version = '1.0'
mainClassName = "org.springframework.xd.ec2.Ec2Installer"


repositories {
    mavenCentral()
}

task setupProject {
    def config = file("$buildDir/config")
    outputs.dir config
}

task copyConfigs(type:Copy, dependsOn: ':setupProject') {
from 'src/main/resources/xd-ec2.properties'
into "$buildDir/config"
}

applicationDistribution.from(copyConfigs) {
    into "config"
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'commons-collections:commons-collections:3.2'
    compile 'org.jclouds.provider:aws-ec2:1.6.0'
    compile 'org.jclouds.driver:jclouds-sshj:1.6.0'
    compile 'org.springframework:spring-core:3.2.4.RELEASE'
    compile 'org.springframework:spring-context:3.2.4.RELEASE'
	compile 'org.springframework:spring-web:3.2.4.RELEASE'
	compile 'ch.qos.logback:logback-classic:1.0.13'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}



startScripts {
    classpath = files('src/dist/config')+classpath
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
        unixScriptFile.text    = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
  
}


test {
    systemProperties 'property': 'value'
}
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
